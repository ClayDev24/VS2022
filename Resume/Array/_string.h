#pragma once
#include <iostream>     // std::cout
#include <cstring>      // strcpy, strcat (fun√ß√µes C)
#include <string>       // std::string (C++ moderna)

static void stringUsage() {

	//üîπ Strings como arrays de char
	char str[] = "texto"; // √â um array de caracteres com \0 no final.

	// Exemplo 1: String como array de caracteres (estilo C)
	char destino[20] = "Ol√°, ";

	// CUIDADO: strcpy e strcat s√£o perigosas se n√£o tiver espa√ßo suficiente!
	char nome[] = "Mundo";

	strcat_s(destino, sizeof(destino), nome); // seguro
	std::cout << "destino: " << destino << std::endl;

	// ‚ö†Ô∏è Por que strcpy e strcat s√£o perigosas?
	//	-Essas fun√ß√µes n√£o verificam o tamanho do buffer de destino.
	//	-Se a string for maior que o espa√ßo dispon√≠vel, isso pode causar estouro de mem√≥ria
	//		(buffer overflow), comportamento indefinido ou falhas de seguran√ßa.

	// strcat ir√° concatenar "Mundo" ao final de "Ol√°, "
	//strcat_s(saudacao, nome); // 'saudacao' tem espa√ßo suficiente
	//std::cout << "Mensagem (char[]): " << saudacao << "\n"; // Ol√°, Mundo

	// Exemplo 2: Uso seguro com std::string
	std::string s1 = "Ol√°, ";
	std::string s2 = "mundo seguro!";
	std::string resultado = s1 + s2;
	std::cout << "Mensagem (std::string): " << resultado << "\n";
}
